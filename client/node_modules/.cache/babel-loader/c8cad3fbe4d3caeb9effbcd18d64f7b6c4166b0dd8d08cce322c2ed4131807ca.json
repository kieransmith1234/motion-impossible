{"ast":null,"code":"var _jsxFileName = \"/home/kierans/code/session-spawner/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { lazy, Suspense, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap-grid.min.css';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = /*#__PURE__*/lazy(_c = () => import('react-bootstrap/Container'));\n_c2 = Container;\nconst Row = /*#__PURE__*/lazy(_c3 = () => import('react-bootstrap/Row'));\n_c4 = Row;\nconst Col = /*#__PURE__*/lazy(_c5 = () => import('react-bootstrap/Col'));\n_c6 = Col;\nconst YesSessionHome = /*#__PURE__*/React.lazy(_c7 = () => import('./NoSessionHome'));\n_c8 = YesSessionHome;\nconst NoSessionHome = /*#__PURE__*/React.lazy(_c9 = () => import('./NoSessionHome'));\n_c10 = NoSessionHome;\naxios.defaults.withCredentials = true;\nfunction App() {\n  _s();\n  const [userId, setUserId] = useState(null);\n  const [expiry, setExpiry] = useState(null);\n  const [sessionActive, setSessionActive] = useState(false);\n  const API_BASE_URL = process.env.API_URL;\n  const startSession = async () => {\n    try {\n      await axios.get(`${API_BASE_URL}/sessions/create`);\n      setSessionActive(true);\n    } catch (error) {\n      console.error('Error creating session:', error);\n    }\n  };\n  const killSession = async () => {\n    try {\n      await axios.get(`${API_BASE_URL}/sessions/destroy`);\n      setSessionActive(false);\n    } catch (error) {\n      console.error('Error deleting session:', error);\n    }\n  };\n  useEffect(() => {\n    const fetchUserId = async () => {\n      try {\n        if (sessionActive) {\n          const index_response = await axios.get(`${API_BASE_URL}/`);\n          const userId = index_response.data;\n\n          // Kill the session if it lingers without a userId for whatever reason. \n          if (!userId) {\n            killSession();\n          }\n          const get_expiry_response = await axios.get(`${API_BASE_URL}/get_expiry`);\n          const expiry = get_expiry_response.data;\n          setExpiry(expiry);\n          setUserId(userId);\n          localStorage.setItem('userId', userId);\n          localStorage.setItem('expires', expiry);\n          console.log(userId + \", \" + sessionActive);\n        } else {\n          setUserId(null);\n          setExpiry(null);\n          localStorage.removeItem('userId');\n          localStorage.removeItem('expires');\n        }\n      } catch (error) {\n        console.error('Error fetching user ID:', error);\n      }\n    };\n    const intervalId = setInterval(() => {\n      fetchUserId();\n    }, 1000);\n\n    // Cleanup function: clear the interval when the component unmounts\n    return () => clearInterval(intervalId);\n  }, [sessionActive, API_BASE_URL, killSession]);\n  const MemoizedNoSessionHome = /*#__PURE__*/React.memo(NoSessionHome);\n  const MemoizedYesSessionHome = /*#__PURE__*/React.memo(YesSessionHome);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"flex-container p-3\",\n    style: {\n      height: '100vh',\n      textAlign: 'center',\n      marginTop: '5rem'\n    },\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        className: \"col-md-12\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Session Spawner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(React.Suspense, {\n        fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 35\n        }, this),\n        children: sessionActive ? ((() => {\n          console.log('Active');\n          return null;\n        })(), /*#__PURE__*/_jsxDEV(MemoizedYesSessionHome, {\n          userId: userId,\n          expiry: expiry,\n          setExpiry: setExpiry,\n          startSession: startSession,\n          killSession: killSession\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)) : ((() => {\n          console.log('Inactive');\n          return null;\n        })(), /*#__PURE__*/_jsxDEV(MemoizedNoSessionHome, {\n          startSession: startSession,\n          killSession: killSession\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n// Hot Module Replacement\n_s(App, \"vA4SrkFBg7RgzaFbETm4oVpO0mE=\");\n_c11 = App;\nif (module.hot) {\n  module.hot.accept();\n}\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n$RefreshReg$(_c, \"Container$lazy\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Row$lazy\");\n$RefreshReg$(_c4, \"Row\");\n$RefreshReg$(_c5, \"Col$lazy\");\n$RefreshReg$(_c6, \"Col\");\n$RefreshReg$(_c7, \"YesSessionHome$React.lazy\");\n$RefreshReg$(_c8, \"YesSessionHome\");\n$RefreshReg$(_c9, \"NoSessionHome$React.lazy\");\n$RefreshReg$(_c10, \"NoSessionHome\");\n$RefreshReg$(_c11, \"App\");","map":{"version":3,"names":["React","lazy","Suspense","useEffect","useState","axios","jsxDEV","_jsxDEV","Container","_c","_c2","Row","_c3","_c4","Col","_c5","_c6","YesSessionHome","_c7","_c8","NoSessionHome","_c9","_c10","defaults","withCredentials","App","_s","userId","setUserId","expiry","setExpiry","sessionActive","setSessionActive","API_BASE_URL","process","env","API_URL","startSession","get","error","console","killSession","fetchUserId","index_response","data","get_expiry_response","localStorage","setItem","log","removeItem","intervalId","setInterval","clearInterval","MemoizedNoSessionHome","memo","MemoizedYesSessionHome","className","style","height","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","fallback","_c11","module","hot","accept","$RefreshReg$"],"sources":["/home/kierans/code/session-spawner/client/src/App.js"],"sourcesContent":["import React, { lazy, Suspense, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap-grid.min.css';\nimport './App.css';\nconst Container = lazy(() => import('react-bootstrap/Container'));\nconst Row = lazy(() => import('react-bootstrap/Row'));\nconst Col = lazy(() => import('react-bootstrap/Col'));\nconst YesSessionHome = React.lazy(() => import('./NoSessionHome'));\nconst NoSessionHome = React.lazy(() => import('./NoSessionHome'));\n\naxios.defaults.withCredentials = true;\n\nfunction App() {\n  const [userId, setUserId] = useState(null);\n  const [expiry, setExpiry] = useState(null);\n  const [sessionActive, setSessionActive] = useState(false);\n\n  const API_BASE_URL = process.env.API_URL;\n\n  const startSession = async () => {\n    try {\n      await axios.get(`${API_BASE_URL}/sessions/create`);\n      setSessionActive(true);\n    } catch (error) {\n      console.error('Error creating session:', error);\n    }\n  };  \n\n  const killSession = async () => {\n    try {\n      await axios.get(`${API_BASE_URL}/sessions/destroy`);\n      setSessionActive(false);\n    } catch (error) {\n      console.error('Error deleting session:', error);\n    }\n  };\n\n  useEffect(() => {\n    const fetchUserId = async () => {\n      try {\n        if (sessionActive) {\n          const index_response = await axios.get(`${API_BASE_URL}/`);\n          const userId = index_response.data;\n\n          // Kill the session if it lingers without a userId for whatever reason. \n          if (!userId) {\n            killSession();\n          }\n\n          const get_expiry_response = await axios.get(`${API_BASE_URL}/get_expiry`);\n          const expiry = get_expiry_response.data;\n\n          setExpiry(expiry);\n          setUserId(userId);\n          localStorage.setItem('userId', userId);\n          localStorage.setItem('expires', expiry);\n\n          console.log(userId + \", \" + sessionActive);\n        } else {\n          setUserId(null);\n          setExpiry(null);\n          localStorage.removeItem('userId');\n          localStorage.removeItem('expires');\n        }\n      } catch (error) {\n        console.error('Error fetching user ID:', error);\n      }\n    };\n\n    const intervalId = setInterval(() => {\n      fetchUserId();\n    }, 1000);\n\n    // Cleanup function: clear the interval when the component unmounts\n    return () => clearInterval(intervalId);\n  }, [sessionActive, API_BASE_URL, killSession]);\n\n  const MemoizedNoSessionHome = React.memo(NoSessionHome);\n  const MemoizedYesSessionHome = React.memo(YesSessionHome);\n\n  return (\n    <Container className=\"flex-container p-3\" style={{ height: '100vh', textAlign: 'center', marginTop: '5rem' }}>\n      <Row>\n        <Col className=\"col-md-12\">\n          <h1>Session Spawner</h1>\n        </Col>\n        <React.Suspense fallback={<div>Loading...</div>}>\n          {sessionActive ? (\n            (() => { console.log('Active'); return null; })(),\n            <MemoizedYesSessionHome userId={userId} expiry={expiry} setExpiry={setExpiry} startSession={startSession} killSession={killSession} />\n          ) : (\n            (() => { console.log('Inactive'); return null; })(),\n            <MemoizedNoSessionHome startSession={startSession} killSession={killSession} />\n          )}\n        </React.Suspense>\n      </Row>\n    </Container>\n  );\n}\n\n// Hot Module Replacement\nif (module.hot) {\n  module.hot.accept();\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}