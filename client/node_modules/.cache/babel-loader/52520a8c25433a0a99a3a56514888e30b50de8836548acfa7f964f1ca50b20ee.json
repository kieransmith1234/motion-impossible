{"ast":null,"code":"var _jsxFileName = \"/home/kierans/code/session-spawner/client/src/YesSessionHome.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap-grid.min.css';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\naxios.defaults.withCredentials = true;\nconst API_BASE_URL = 'http://localhost:5000';\nfunction YesSessionHome({\n  userId,\n  getExpiry,\n  startSession,\n  killSession\n}) {\n  _s();\n  const handleNewSessionClick = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/sessions/create`);\n      startSession();\n    } catch (error) {\n      killSession();\n      console.error('Error creating new session:', error);\n    }\n  };\n  const handleDeleteSessionClick = async () => {\n    try {\n      await axios.get(`${API_BASE_URL}/sessions/destroy`);\n      killSession();\n    } catch (error) {\n      console.error('Error deleting session:', error);\n    }\n  };\n  useEffect(() => {\n    const expiry = getExpiry();\n    if (expiry) {\n      const intervalId = setInterval(() => {\n        const now = moment();\n        const expiryTime = moment(expiry);\n        const diff = expiryTime.diff(now);\n        const duration = moment.duration(diff);\n        const seconds = duration.seconds();\n        console.log(`Expiry in ${seconds} seconds.`);\n        setExpiry(expiryTime.add(500, 'millisecond').format());\n      }, 1000);\n\n      // Cleanup function: clear the interval when the component unmounts or when expiry changes\n      return () => clearInterval(intervalId);\n    } else {\n      console.log('No expiry set.');\n    }\n  }, [expiry]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      className: \"col-md-12\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Welcome back! Your user ID is: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontWeight: 'bold'\n          },\n          children: userId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Session expires in:\", ' ', expiry ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: moment.duration(moment(expiry).diff(moment())).seconds()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this) : 'unknown']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button create\",\n        onClick: handleNewSessionClick,\n        children: \"Create session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button delete\",\n        onClick: handleDeleteSessionClick,\n        children: \"Delete Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(YesSessionHome, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = YesSessionHome;\nexport default YesSessionHome;\nvar _c;\n$RefreshReg$(_c, \"YesSessionHome\");","map":{"version":3,"names":["React","useState","useEffect","axios","moment","Container","Row","Col","jsxDEV","_jsxDEV","Fragment","_Fragment","defaults","withCredentials","API_BASE_URL","YesSessionHome","userId","getExpiry","startSession","killSession","_s","handleNewSessionClick","response","get","error","console","handleDeleteSessionClick","expiry","intervalId","setInterval","now","expiryTime","diff","duration","seconds","log","setExpiry","add","format","clearInterval","children","className","style","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/kierans/code/session-spawner/client/src/YesSessionHome.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap-grid.min.css';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport './App.css';\n\naxios.defaults.withCredentials = true;\n\nconst API_BASE_URL = 'http://localhost:5000';\n\nfunction YesSessionHome({ userId, getExpiry, startSession, killSession }) {\n\n  const handleNewSessionClick = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/sessions/create`);\n      startSession();\n    } catch (error) {\n      killSession();\n      console.error('Error creating new session:', error);\n    }\n  };\n\n  const handleDeleteSessionClick = async () => {\n    try {\n      await axios.get(`${API_BASE_URL}/sessions/destroy`);\n      killSession();\n    } catch (error) {\n      console.error('Error deleting session:', error);\n    }\n  };\n\n  useEffect(() => {\n    const expiry = getExpiry();\n    if (expiry) {\n      const intervalId = setInterval(() => {\n        const now = moment();\n        const expiryTime = moment(expiry);\n        const diff = expiryTime.diff(now);\n        const duration = moment.duration(diff);\n        const seconds = duration.seconds();\n\n        console.log(`Expiry in ${seconds} seconds.`);\n\n        setExpiry(expiryTime.add(500, 'millisecond').format());\n      }, 1000);\n\n      // Cleanup function: clear the interval when the component unmounts or when expiry changes\n      return () => clearInterval(intervalId);\n    } else {\n      console.log('No expiry set.');\n    }\n  }, [expiry]);\n\n  return (\n      <>\n        <Col className=\"col-md-12\">\n          <p>\n            Welcome back! Your user ID is: <span style={{ fontWeight: 'bold' }}>{userId}</span>\n          </p>\n          <p>\n            Session expires in:{' '}\n            {expiry ? (\n              <span>\n                {moment.duration(moment(expiry).diff(moment())).seconds()}\n              </span>\n            ) : (\n              'unknown'\n            )}\n          </p>\n          <button className=\"button create\" onClick={handleNewSessionClick}>\n            Create session\n          </button>\n          <button className=\"button delete\" onClick={handleDeleteSessionClick}>\n            Delete Session\n          </button>\n        </Col>\n      </>\n  );\n}\n          \nexport default YesSessionHome;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}