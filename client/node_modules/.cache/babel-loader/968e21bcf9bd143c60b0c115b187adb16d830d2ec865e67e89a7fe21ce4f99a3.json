{"ast":null,"code":"var _jsxFileName = \"/home/kierans/code/session-spawner/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap-grid.min.css';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport './App.css';\nimport NoSessionHome from './NoSessionHome';\nimport YesSessionHome from './YesSessionHome';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.withCredentials = true;\nconst API_BASE_URL = 'http://localhost:5000';\nfunction App() {\n  _s();\n  const [userId, setUserId] = useState(null);\n  const [expiry, setExpiry] = useState(null);\n  const [sessionActive, setSessionActive] = useState(false);\n  const startSession = async () => {\n    try {\n      await axios.get(`${API_BASE_URL}/sessions/create`);\n      setSessionActive(true);\n    } catch (error) {\n      console.error('Error creating session:', error);\n    }\n  };\n  const killSession = () => {\n    setSessionActive(false);\n  };\n  useEffect(() => {\n    const fetchUserId = async () => {\n      try {\n        if (sessionActive) {\n          const index_response = await axios.get(`${API_BASE_URL}/`);\n          const userId = index_response.data;\n          const get_expiry_response = await axios.get(`${API_BASE_URL}/get_expiry`);\n          const expiry = get_expiry_response.data;\n          setExpiry(expiry);\n          setUserId(userId);\n          localStorage.setItem('userId', userId);\n          localStorage.setItem('expires', expiry);\n          startSession();\n        } else {\n          setUserId(null);\n          localStorage.removeItem('userId');\n          localStorage.removeItem('expires');\n          killSession();\n        }\n      } catch (error) {\n        console.error('Error fetching user ID:', error);\n      }\n    };\n    const intervalId = setInterval(() => {\n      fetchUserId();\n    }, 1000);\n\n    // Cleanup function: clear the interval when the component unmounts\n    return () => clearInterval(intervalId);\n  }, [sessionActive]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"flex-container p-3\",\n    style: {\n      height: '100vh',\n      textAlign: 'center',\n      marginTop: '5rem'\n    },\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        className: \"col-md-12\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Session Spawner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), sessionActive ? /*#__PURE__*/_jsxDEV(YesSessionHome, {\n        userId: userId,\n        expiry: expiry,\n        setExpiry: setExpiry,\n        startSession: startSession,\n        killSession: killSession\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(NoSessionHome, {\n        startSession: startSession\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vA4SrkFBg7RgzaFbETm4oVpO0mE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Container","Row","Col","NoSessionHome","YesSessionHome","jsxDEV","_jsxDEV","defaults","withCredentials","API_BASE_URL","App","_s","userId","setUserId","expiry","setExpiry","sessionActive","setSessionActive","startSession","get","error","console","killSession","fetchUserId","index_response","data","get_expiry_response","localStorage","setItem","removeItem","intervalId","setInterval","clearInterval","className","style","height","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/kierans/code/session-spawner/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap-grid.min.css';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport './App.css';\nimport NoSessionHome from './NoSessionHome';\nimport YesSessionHome from './YesSessionHome';\n\naxios.defaults.withCredentials = true;\n\nconst API_BASE_URL = 'http://localhost:5000';\n\nfunction App() {\n  const [userId, setUserId] = useState(null);\n  const [expiry, setExpiry] = useState(null);\n  const [sessionActive, setSessionActive] = useState(false);\n\n  const startSession = async  () => {\n    try {\n      await axios.get(`${API_BASE_URL}/sessions/create`);\n      setSessionActive(true);\n    } catch (error) {\n      console.error('Error creating session:', error);\n    }\n  };\n\n  const killSession = () => {\n    setSessionActive(false);\n  };\n\n  useEffect(() => {\n    const fetchUserId = async () => {\n      try {\n        if (sessionActive) {\n          const index_response = await axios.get(`${API_BASE_URL}/`);\n          const userId = index_response.data;\n\n          const get_expiry_response = await axios.get(`${API_BASE_URL}/get_expiry`);\n          const expiry = get_expiry_response.data;\n          setExpiry(expiry);\n          setUserId(userId);\n          localStorage.setItem('userId', userId);\n          localStorage.setItem('expires', expiry);\n          startSession();\n        } else {\n          setUserId(null);\n          localStorage.removeItem('userId');\n          localStorage.removeItem('expires');\n          killSession();\n        }\n      } catch (error) {\n        console.error('Error fetching user ID:', error);\n      }\n    };\n\n    const intervalId = setInterval(() => {\n      fetchUserId();\n    }, 1000);\n\n    // Cleanup function: clear the interval when the component unmounts\n    return () => clearInterval(intervalId);\n  }, [sessionActive]);\n\n  return (\n    <Container className=\"flex-container p-3\" style={{ height: '100vh', textAlign: 'center', marginTop: '5rem' }}>\n      <Row>\n        <Col className=\"col-md-12\">\n          <h1>Session Spawner</h1>\n        </Col>\n          {sessionActive ? (\n            <YesSessionHome userId={userId} expiry={expiry} setExpiry={setExpiry} startSession={startSession} killSession={killSession} />\n          ) : (\n            <NoSessionHome startSession={startSession} />\n          )}\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}