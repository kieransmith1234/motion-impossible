{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Sergey Melyukov @smelukov\n*/\n\n\"use strict\";\n\nconst {\n  ReplaceSource,\n  RawSource,\n  ConcatSource\n} = require(\"webpack-sources\");\nconst {\n  UsageState\n} = require(\"../ExportsInfo\");\nconst Generator = require(\"../Generator\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst Template = require(\"../Template\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../Generator\").GenerateContext} GenerateContext */\n/** @typedef {import(\"../Generator\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"../Module\").ConcatenationBailoutReasonContext} ConcatenationBailoutReasonContext */\n/** @typedef {import(\"../NormalModule\")} NormalModule */\n/** @typedef {import(\"../util/Hash\")} Hash */\n\n/**\n * @template T\n * @typedef {import(\"../InitFragment\")<T>} InitFragment\n */\n\nconst TYPES = new Set([\"javascript\"]);\nclass CssExportsGenerator extends Generator {\n  constructor() {\n    super();\n  }\n\n  // TODO add getConcatenationBailoutReason to allow concatenation\n  // but how to make it have a module id\n\n  /**\n   * @param {NormalModule} module module for which the code should be generated\n   * @param {GenerateContext} generateContext context for generate\n   * @returns {Source} generated code\n   */\n  generate(module, generateContext) {\n    const source = new ReplaceSource(new RawSource(\"\"));\n    /** @type {InitFragment<TODO>[]} */\n    const initFragments = [];\n    const cssExports = new Map();\n    generateContext.runtimeRequirements.add(RuntimeGlobals.module);\n    let chunkInitFragments;\n    const runtimeRequirements = new Set();\n    const templateContext = {\n      runtimeTemplate: generateContext.runtimeTemplate,\n      dependencyTemplates: generateContext.dependencyTemplates,\n      moduleGraph: generateContext.moduleGraph,\n      chunkGraph: generateContext.chunkGraph,\n      module,\n      runtime: generateContext.runtime,\n      runtimeRequirements: runtimeRequirements,\n      concatenationScope: generateContext.concatenationScope,\n      codeGenerationResults: generateContext.codeGenerationResults,\n      initFragments,\n      cssExports,\n      get chunkInitFragments() {\n        if (!chunkInitFragments) {\n          const data = generateContext.getData();\n          chunkInitFragments = data.get(\"chunkInitFragments\");\n          if (!chunkInitFragments) {\n            chunkInitFragments = [];\n            data.set(\"chunkInitFragments\", chunkInitFragments);\n          }\n        }\n        return chunkInitFragments;\n      }\n    };\n\n    /**\n     * @param {Dependency} dependency the dependency\n     */\n    const handleDependency = dependency => {\n      const constructor = /** @type {new (...args: any[]) => Dependency} */\n      dependency.constructor;\n      const template = generateContext.dependencyTemplates.get(constructor);\n      if (!template) {\n        throw new Error(\"No template for dependency: \" + dependency.constructor.name);\n      }\n      template.apply(dependency, source, templateContext);\n    };\n    module.dependencies.forEach(handleDependency);\n    if (generateContext.concatenationScope) {\n      const source = new ConcatSource();\n      const usedIdentifiers = new Set();\n      for (const [k, v] of cssExports) {\n        let identifier = Template.toIdentifier(k);\n        let i = 0;\n        while (usedIdentifiers.has(identifier)) {\n          identifier = Template.toIdentifier(k + i);\n        }\n        usedIdentifiers.add(identifier);\n        generateContext.concatenationScope.registerExport(k, identifier);\n        source.add(`${generateContext.runtimeTemplate.supportsConst ? \"const\" : \"var\"} ${identifier} = ${JSON.stringify(v)};\\n`);\n      }\n      return source;\n    } else {\n      const otherUsed = generateContext.moduleGraph.getExportsInfo(module).otherExportsInfo.getUsed(generateContext.runtime) !== UsageState.Unused;\n      if (otherUsed) {\n        generateContext.runtimeRequirements.add(RuntimeGlobals.makeNamespaceObject);\n      }\n      return new RawSource(`${otherUsed ? `${RuntimeGlobals.makeNamespaceObject}(` : \"\"}${module.moduleArgument}.exports = {\\n${Array.from(cssExports, ([k, v]) => `\\t${JSON.stringify(k)}: ${JSON.stringify(v)}`).join(\",\\n\")}\\n}${otherUsed ? \")\" : \"\"};`);\n    }\n  }\n\n  /**\n   * @param {NormalModule} module fresh module\n   * @returns {Set<string>} available types (do not mutate)\n   */\n  getTypes(module) {\n    return TYPES;\n  }\n\n  /**\n   * @param {NormalModule} module the module\n   * @param {string=} type source type\n   * @returns {number} estimate size of the module\n   */\n  getSize(module, type) {\n    return 42;\n  }\n\n  /**\n   * @param {Hash} hash hash that will be modified\n   * @param {UpdateHashContext} updateHashContext context for updating hash\n   */\n  updateHash(hash, {\n    module\n  }) {}\n}\nmodule.exports = CssExportsGenerator;","map":{"version":3,"names":["ReplaceSource","RawSource","ConcatSource","require","UsageState","Generator","RuntimeGlobals","Template","TYPES","Set","CssExportsGenerator","constructor","generate","module","generateContext","source","initFragments","cssExports","Map","runtimeRequirements","add","chunkInitFragments","templateContext","runtimeTemplate","dependencyTemplates","moduleGraph","chunkGraph","runtime","concatenationScope","codeGenerationResults","data","getData","get","set","handleDependency","dependency","template","Error","name","apply","dependencies","forEach","usedIdentifiers","k","v","identifier","toIdentifier","i","has","registerExport","supportsConst","JSON","stringify","otherUsed","getExportsInfo","otherExportsInfo","getUsed","Unused","makeNamespaceObject","moduleArgument","Array","from","join","getTypes","getSize","type","updateHash","hash","exports"],"sources":["/home/kierans/code/session-spawner/client/node_modules/webpack/lib/css/CssExportsGenerator.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Sergey Melyukov @smelukov\n*/\n\n\"use strict\";\n\nconst { ReplaceSource, RawSource, ConcatSource } = require(\"webpack-sources\");\nconst { UsageState } = require(\"../ExportsInfo\");\nconst Generator = require(\"../Generator\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst Template = require(\"../Template\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../Generator\").GenerateContext} GenerateContext */\n/** @typedef {import(\"../Generator\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"../Module\").ConcatenationBailoutReasonContext} ConcatenationBailoutReasonContext */\n/** @typedef {import(\"../NormalModule\")} NormalModule */\n/** @typedef {import(\"../util/Hash\")} Hash */\n\n/**\n * @template T\n * @typedef {import(\"../InitFragment\")<T>} InitFragment\n */\n\nconst TYPES = new Set([\"javascript\"]);\n\nclass CssExportsGenerator extends Generator {\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\t// TODO add getConcatenationBailoutReason to allow concatenation\n\t// but how to make it have a module id\n\n\t/**\n\t * @param {NormalModule} module module for which the code should be generated\n\t * @param {GenerateContext} generateContext context for generate\n\t * @returns {Source} generated code\n\t */\n\tgenerate(module, generateContext) {\n\t\tconst source = new ReplaceSource(new RawSource(\"\"));\n\t\t/** @type {InitFragment<TODO>[]} */\n\t\tconst initFragments = [];\n\t\tconst cssExports = new Map();\n\n\t\tgenerateContext.runtimeRequirements.add(RuntimeGlobals.module);\n\n\t\tlet chunkInitFragments;\n\t\tconst runtimeRequirements = new Set();\n\n\t\tconst templateContext = {\n\t\t\truntimeTemplate: generateContext.runtimeTemplate,\n\t\t\tdependencyTemplates: generateContext.dependencyTemplates,\n\t\t\tmoduleGraph: generateContext.moduleGraph,\n\t\t\tchunkGraph: generateContext.chunkGraph,\n\t\t\tmodule,\n\t\t\truntime: generateContext.runtime,\n\t\t\truntimeRequirements: runtimeRequirements,\n\t\t\tconcatenationScope: generateContext.concatenationScope,\n\t\t\tcodeGenerationResults: generateContext.codeGenerationResults,\n\t\t\tinitFragments,\n\t\t\tcssExports,\n\t\t\tget chunkInitFragments() {\n\t\t\t\tif (!chunkInitFragments) {\n\t\t\t\t\tconst data = generateContext.getData();\n\t\t\t\t\tchunkInitFragments = data.get(\"chunkInitFragments\");\n\t\t\t\t\tif (!chunkInitFragments) {\n\t\t\t\t\t\tchunkInitFragments = [];\n\t\t\t\t\t\tdata.set(\"chunkInitFragments\", chunkInitFragments);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn chunkInitFragments;\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * @param {Dependency} dependency the dependency\n\t\t */\n\t\tconst handleDependency = dependency => {\n\t\t\tconst constructor = /** @type {new (...args: any[]) => Dependency} */ (\n\t\t\t\tdependency.constructor\n\t\t\t);\n\t\t\tconst template = generateContext.dependencyTemplates.get(constructor);\n\t\t\tif (!template) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\"No template for dependency: \" + dependency.constructor.name\n\t\t\t\t);\n\t\t\t}\n\n\t\t\ttemplate.apply(dependency, source, templateContext);\n\t\t};\n\t\tmodule.dependencies.forEach(handleDependency);\n\n\t\tif (generateContext.concatenationScope) {\n\t\t\tconst source = new ConcatSource();\n\t\t\tconst usedIdentifiers = new Set();\n\t\t\tfor (const [k, v] of cssExports) {\n\t\t\t\tlet identifier = Template.toIdentifier(k);\n\t\t\t\tlet i = 0;\n\t\t\t\twhile (usedIdentifiers.has(identifier)) {\n\t\t\t\t\tidentifier = Template.toIdentifier(k + i);\n\t\t\t\t}\n\t\t\t\tusedIdentifiers.add(identifier);\n\t\t\t\tgenerateContext.concatenationScope.registerExport(k, identifier);\n\t\t\t\tsource.add(\n\t\t\t\t\t`${\n\t\t\t\t\t\tgenerateContext.runtimeTemplate.supportsConst ? \"const\" : \"var\"\n\t\t\t\t\t} ${identifier} = ${JSON.stringify(v)};\\n`\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn source;\n\t\t} else {\n\t\t\tconst otherUsed =\n\t\t\t\tgenerateContext.moduleGraph\n\t\t\t\t\t.getExportsInfo(module)\n\t\t\t\t\t.otherExportsInfo.getUsed(generateContext.runtime) !==\n\t\t\t\tUsageState.Unused;\n\t\t\tif (otherUsed) {\n\t\t\t\tgenerateContext.runtimeRequirements.add(\n\t\t\t\t\tRuntimeGlobals.makeNamespaceObject\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn new RawSource(\n\t\t\t\t`${otherUsed ? `${RuntimeGlobals.makeNamespaceObject}(` : \"\"}${\n\t\t\t\t\tmodule.moduleArgument\n\t\t\t\t}.exports = {\\n${Array.from(\n\t\t\t\t\tcssExports,\n\t\t\t\t\t([k, v]) => `\\t${JSON.stringify(k)}: ${JSON.stringify(v)}`\n\t\t\t\t).join(\",\\n\")}\\n}${otherUsed ? \")\" : \"\"};`\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * @param {NormalModule} module fresh module\n\t * @returns {Set<string>} available types (do not mutate)\n\t */\n\tgetTypes(module) {\n\t\treturn TYPES;\n\t}\n\n\t/**\n\t * @param {NormalModule} module the module\n\t * @param {string=} type source type\n\t * @returns {number} estimate size of the module\n\t */\n\tgetSize(module, type) {\n\t\treturn 42;\n\t}\n\n\t/**\n\t * @param {Hash} hash hash that will be modified\n\t * @param {UpdateHashContext} updateHashContext context for updating hash\n\t */\n\tupdateHash(hash, { module }) {}\n}\n\nmodule.exports = CssExportsGenerator;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}